// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public class SteamVR_Input_ActionSet_default : Valve.VR.SteamVR_ActionSet
    {
        
        public virtual SteamVR_Action_Boolean moveDown
        {
            get
            {
                return SteamVR_Actions.default_moveDown;
            }
        }
        
        public virtual SteamVR_Action_Boolean moveForward
        {
            get
            {
                return SteamVR_Actions.default_moveForward;
            }
        }
        
        public virtual SteamVR_Action_Boolean moveBackward
        {
            get
            {
                return SteamVR_Actions.default_moveBackward;
            }
        }
        
        public virtual SteamVR_Action_Boolean moveRight
        {
            get
            {
                return SteamVR_Actions.default_moveRight;
            }
        }
        
        public virtual SteamVR_Action_Boolean moveLeft
        {
            get
            {
                return SteamVR_Actions.default_moveLeft;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateX
        {
            get
            {
                return SteamVR_Actions.default_rotateX;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateY
        {
            get
            {
                return SteamVR_Actions.default_rotateY;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateZ
        {
            get
            {
                return SteamVR_Actions.default_rotateZ;
            }
        }
        
        public virtual SteamVR_Action_Pose skellyLeft
        {
            get
            {
                return SteamVR_Actions.default_skellyLeft;
            }
        }
        
        public virtual SteamVR_Action_Pose skellyRight
        {
            get
            {
                return SteamVR_Actions.default_skellyRight;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateXNeg
        {
            get
            {
                return SteamVR_Actions.default_rotateXNeg;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateYNeg
        {
            get
            {
                return SteamVR_Actions.default_rotateYNeg;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateZNeg
        {
            get
            {
                return SteamVR_Actions.default_rotateZNeg;
            }
        }
        
        public virtual SteamVR_Action_Vector2 trackpadLeftPosition
        {
            get
            {
                return SteamVR_Actions.default_trackpadLeftPosition;
            }
        }
        
        public virtual SteamVR_Action_Vector2 trackpadRightPosition
        {
            get
            {
                return SteamVR_Actions.default_trackpadRightPosition;
            }
        }
        
        public virtual SteamVR_Action_Boolean holdPiece
        {
            get
            {
                return SteamVR_Actions.default_holdPiece;
            }
        }
        
        public virtual SteamVR_Action_Boolean moveLeftJoy
        {
            get
            {
                return SteamVR_Actions.default_moveLeftJoy;
            }
        }
        
        public virtual SteamVR_Action_Boolean moveForwardJoy
        {
            get
            {
                return SteamVR_Actions.default_moveForwardJoy;
            }
        }
        
        public virtual SteamVR_Action_Boolean moveRightJoy
        {
            get
            {
                return SteamVR_Actions.default_moveRightJoy;
            }
        }
        
        public virtual SteamVR_Action_Boolean moveBackwardJoy
        {
            get
            {
                return SteamVR_Actions.default_moveBackwardJoy;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateXJoy
        {
            get
            {
                return SteamVR_Actions.default_rotateXJoy;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateZJoy
        {
            get
            {
                return SteamVR_Actions.default_rotateZJoy;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateZNegJoy
        {
            get
            {
                return SteamVR_Actions.default_rotateZNegJoy;
            }
        }
        
        public virtual SteamVR_Action_Boolean rotateXNegJoy
        {
            get
            {
                return SteamVR_Actions.default_rotateXNegJoy;
            }
        }
        
        public virtual SteamVR_Action_Vector2 rightJoyPosition
        {
            get
            {
                return SteamVR_Actions.default_rightJoyPosition;
            }
        }
        
        public virtual SteamVR_Action_Vector2 leftJoyPosition
        {
            get
            {
                return SteamVR_Actions.default_leftJoyPosition;
            }
        }
        
        public virtual SteamVR_Action_Boolean instantPlacement
        {
            get
            {
                return SteamVR_Actions.default_instantPlacement;
            }
        }
        
        public virtual SteamVR_Action_Vibration Haptic
        {
            get
            {
                return SteamVR_Actions.default_Haptic;
            }
        }
    }
}
